name: Daily runs
on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    paths:
    - '.github/workflows/daily.yml'

jobs:
  linux-daily-unittests:
    name: "Linux - daily unit tests - ${{ matrix.NOTE }}"
    runs-on: ubuntu-latest
    env:
      CI: True
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: 'nightly'
            NOTE: 'Nightly Builds' # run once with nightlies
          - environment: 'nightly'
            NOTE: 'Python 3.12' # run once with normal dependencies
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659
        with:
          environments: ${{ matrix.environment }}
      - name: Install nightlies
        if: matrix.NOTE == 'Nightly Builds'
        shell: bash -el {0}
        run: |
          PRE_WHEELS="https://pypi.anaconda.org/scientific-python-nightly-wheels/simple/"
          for pkg in pandas scikit-learn scipy; do
            echo "Installing $pkg nightly"
            pixi run -e ${{ matrix.environment }} pip install --pre --no-deps --only-binary :all: --upgrade --timeout=60 -i $PRE_WHEELS $pkg
          done
          echo Install pyarrow nightly
          pixi run -e ${{ matrix.environment }} pip install --extra-index-url https://pypi.fury.io/arrow-nightlies/ --prefer-binary --pre --no-deps pyarrow
          echo Install tabmat nightly
          pixi run -e ${{ matrix.environment }} pip install --no-use-pep517 --no-deps git+https://github.com/Quantco/tabmat
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test -nauto
      - name: Run doctest
        # Check that the readme example will work by running via doctest.
        # We run outside the repo to make the test a bit more similar to
        # a user running after installing with conda.
        run: |
          mkdir ../temp
          cp README.md ../temp
          cd ../temp
          pixi run --manifest-path ../glum/pixi.toml -e ${{ matrix.environment }} python -m doctest -v README.md

      - name: Issue on failure
        uses: actions/github-script@v7
        if: ${{ failure() }}
        with:
          script: |
            github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              labels: "[bot] Daily run"
            }).then((issues) => {
              if (issues.data.length === 0){
                github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: "Daily run failure: Unit tests",
                  body: "The daily unit tests failed. See https://github.com/Quantco/glum/actions/runs/${{ github.run_id }} for details.",
                  assignees: ["MarcAntoineSchmidtQC"],
                  labels: ["[bot] Daily run"]
                })
              }
            });
