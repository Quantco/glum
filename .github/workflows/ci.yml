name: CI
on:
  # We would like to trigger for CI for any pull request action -
  # both from QuantCo's branches as well as forks.
  pull_request:
  # In addition to pull requests, we want to run CI for pushes
  # to the main branch and tags.
  push:
    branches:
      - "main"
    tags:
      - "*"

jobs:
  pre-commit-checks:
    name: Linux - pre-commit checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      PRE_COMMIT_USE_MICROMAMBA: 1
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@19eac09b398e3d0c747adc7921926a6d802df4da # v0.8.8
        with:
          environments: lint default
      - name: pre-commit
        run: pixi run -e lint pre-commit-run --color=always --show-diff-on-failure

  unit-tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    env:
      CI: True
    strategy:
      fail-fast: true
      matrix:
        include:
          - { os: ubuntu-latest, environment: 'py310' }
          - { os: ubuntu-latest, environment: 'py311' }
          - { os: ubuntu-latest, environment: 'py312' }
          - { os: ubuntu-latest, environment: 'py313' }
          - { os: windows-latest, environment: 'py313' }
          - { os: macos-latest, environment: 'py313' }
          - { os: ubuntu-latest, environment: 'oldies' }
          - { os: ubuntu-latest, environment: 'nightly' }
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@19eac09b398e3d0c747adc7921926a6d802df4da
        with:
          environments: ${{ matrix.environment }}
      - name: Update dependencies
        if: matrix.environment == 'nightly'
        run: pixi update -e ${{ matrix.environment }}
      - name: Install nightlies
        if: matrix.environment == 'nightly'
        run: pixi run -e ${{ matrix.environment }} install-nightlies
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test -nauto
      - name: Run doctest
        # Check that the readme example will work by running via doctest.
        # We run outside the repo to make the test a bit more similar to
        # a user running after installing with conda.
        run: |
          mkdir ../temp
          cp README.md ../temp
          mkdir ../temp/data
          cp data/housing.parquet ../temp/data
          cd ../temp
          pixi run --manifest-path ../glum/pixi.toml -e ${{ matrix.environment }} python -m doctest -v README.md
